{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maida\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\project\\\\src\\\\pages\\\\FavoriteCardPage\\\\FavoriteCardPage.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CardComponent from \"../../components/CardComponent\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteCardPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [likedCards, setLikedCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const userData = useSelector(bigPie => bigPie.authSlice.userData);\n  _s(useEffect(_s(() => {\n    _s();\n    const fetchLikedCards = async () => {\n      try {\n        setLoading(true);\n        const userId = userData._id; // Replace with the user's ID\n        const dataFromServer = await axios.get(\"https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards\");\n        const cards = dataFromServer.data.filter(card => card.likes.includes(userId));\n        setLikedCards(cards);\n        setLoading(false);\n      } catch (error) {\n        setError(\"Error fetching liked card IDs\");\n        setLoading(false);\n      }\n    };\n    useEffect(() => {\n      if (!initialDataFromServer.length) return;\n      const filter = query.filter ? query.filter : \"\";\n      console.log(\"filter\", filter);\n      setDataFromServer(initialDataFromServer.filter(card => card.title.startsWith(filter)));\n    }, [query, initialDataFromServer]);\n    const handleDeleteCard = _id => {\n      console.log(\"_id to delete (HomePage)\", _id);\n      setDataFromServer(dataFromServerCopy => dataFromServerCopy.filter(card => card._id !== _id));\n    };\n    fetchLikedCards();\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const handleLikeRemove = () => {\n    const updatedLikedCards = likedCards.filter(card => card._id !== card._Id);\n    setLikedCards(updatedLikedCards);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: likedCards.length > 0 ? likedCards.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(CardComponent, {\n          _id: card._id,\n          title: card.title,\n          subTitle: card.subtitle,\n          phone: card.phone,\n          address: `${card.address.city}, ${card.address.street} ${card.address.houseNumber}`,\n          img: card.image && card.image.url,\n          alt: card.image && card.image.alt,\n          like: true // Assuming this represents 'liked' status\n          ,\n          onToggleFavorite: () => handleLikeRemove(card._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No liked cards found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s2(FavoriteCardPage, \"blpIfrE+OJhs/zmyWpv0/8Yk9Z4=\", false, function () {\n  return [useSelector];\n});\n_c = FavoriteCardPage;\nexport default FavoriteCardPage;\nvar _c;\n$RefreshReg$(_c, \"FavoriteCardPage\");","map":{"version":3,"names":["React","useEffect","useState","CardComponent","axios","useSelector","Container","Grid","jsxDEV","_jsxDEV","FavoriteCardPage","_s2","_s","$RefreshSig$","likedCards","setLikedCards","loading","setLoading","error","setError","userData","bigPie","authSlice","fetchLikedCards","userId","_id","dataFromServer","get","cards","data","filter","card","likes","includes","initialDataFromServer","length","query","console","log","setDataFromServer","title","startsWith","handleDeleteCard","dataFromServerCopy","handleLikeRemove","updatedLikedCards","_Id","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","item","xs","sm","md","lg","subTitle","subtitle","phone","address","city","street","houseNumber","img","image","url","alt","like","onToggleFavorite","_c","$RefreshReg$"],"sources":["C:/Users/maida/OneDrive/מסמכים/project/src/pages/FavoriteCardPage/FavoriteCardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CardComponent from \"../../components/CardComponent\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Grid } from \"@mui/material\";\n\nconst FavoriteCardPage = () => {\n  const [likedCards, setLikedCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const userData = useSelector((bigPie) => bigPie.authSlice.userData);\n\n  useEffect(() => {\n    const fetchLikedCards = async () => {\n      try {\n        setLoading(true);\n        const userId = userData._id; // Replace with the user's ID\n        const dataFromServer = await axios.get(\n          \"https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards\"\n        );\n        const cards = dataFromServer.data.filter((card) =>\n          card.likes.includes(userId)\n        );\n\n        setLikedCards(cards);\n        setLoading(false);\n      } catch (error) {\n        setError(\"Error fetching liked card IDs\");\n        setLoading(false);\n      }\n    };\n    useEffect(() => {\n      if (!initialDataFromServer.length) return;\n      const filter = query.filter ? query.filter : \"\";\n      console.log(\"filter\", filter);\n      setDataFromServer(\n        initialDataFromServer.filter((card) => card.title.startsWith(filter))\n      );\n    }, [query, initialDataFromServer]);\n\n    const handleDeleteCard = (_id) => {\n      console.log(\"_id to delete (HomePage)\", _id);\n      setDataFromServer((dataFromServerCopy) =>\n        dataFromServerCopy.filter((card) => card._id !== _id)\n      );\n    };\n    fetchLikedCards();\n  }, []);\n\n  const handleLikeRemove = () => {\n    const updatedLikedCards = likedCards.filter(\n      (card) => card._id !== card._Id\n    );\n    setLikedCards(updatedLikedCards);\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n  return (\n    <Container>\n      <Grid container spacing={2}>\n        {likedCards.length > 0 ? (\n          likedCards.map((card) => (\n            <Grid item key={card._id} xs={12} sm={6} md={4} lg={3}>\n              <CardComponent\n                _id={card._id}\n                title={card.title}\n                subTitle={card.subtitle}\n                phone={card.phone}\n                address={`${card.address.city}, ${card.address.street} ${card.address.houseNumber}`}\n                img={card.image && card.image.url}\n                alt={card.image && card.image.alt}\n                like={true} // Assuming this represents 'liked' status\n                onToggleFavorite={() => handleLikeRemove(card._id)}\n              />\n            </Grid>\n          ))\n        ) : (\n          <div>No liked cards found.</div>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default FavoriteCardPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}