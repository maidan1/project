{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maida\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\project\\\\src\\\\pages\\\\login\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(true);\n  const [errorsState, setErrorsState] = useState(null);\n  const [loginAttempts, setLoginAttempts] = useState(0);\n  const [isBlocked, setIsBlocked] = useState(false);\n\n  // Simulated login validation function (replace with your actual validation logic)\n  const validateLogin = (email, password) => {\n    // Replace this with your validation logic\n    if (email === \"user@example.com\" && password === \"password123\") {\n      return true;\n    }\n    return false;\n  };\n  const handleSubmit = async event => {\n    if (isBlocked) {\n      toast(\"Your account is blocked. Please try again later.\");\n      return;\n    }\n    try {\n      event.preventDefault();\n      const isValid = validateLogin(emailValue, passwordValue);\n      if (!isValid) {\n        throw new Error(\"Invalid credentials\");\n      }\n\n      // Successful login\n      resetLoginState();\n      toast(\"You logged in successfully 👌\");\n    } catch (err) {\n      console.log(\"Login error:\", err);\n      setLoginAttempts(loginAttempts + 1);\n      if (loginAttempts >= 2) {\n        setIsBlocked(true);\n        // Simulate storing the block timestamp in localStorage or a server-side database\n        localStorage.setItem(\"blockedUser\", Date.now());\n      }\n    }\n  };\n  useEffect(() => {\n    // Check if the user is unblocked\n    const blockedUserTimestamp = localStorage.getItem(\"blockedUser\");\n    if (blockedUserTimestamp) {\n      const now = Date.now();\n      const blockedUserTime = parseInt(blockedUserTimestamp);\n      if (now - blockedUserTime >= 24 * 60 * 60 * 1000) {\n        // If 24 hours have passed, unblock the user\n        setIsBlocked(false);\n        setLoginAttempts(0);\n        localStorage.removeItem(\"blockedUser\");\n      }\n    }\n  }, [isBlocked]);\n  const resetLoginState = () => {\n    setEmailValue(\"\");\n    setPasswordValue(\"\");\n    setRememberMe(true);\n    setErrorsState(null);\n  };\n  const handleEmailInputChange = e => {\n    setEmailValue(e.target.value);\n  };\n  const handlePasswordInputChange = e => {\n    setPasswordValue(e.target.value);\n  };\n  const handleRememberMeChange = () => {\n    setRememberMe(!rememberMe);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: emailValue,\n          onChange: handleEmailInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: passwordValue,\n          onChange: handlePasswordInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"rq+fN38PPDzqppGXskovHi3zScY=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","toast","axios","jsxDEV","_jsxDEV","LoginPage","_s","emailValue","setEmailValue","passwordValue","setPasswordValue","rememberMe","setRememberMe","errorsState","setErrorsState","loginAttempts","setLoginAttempts","isBlocked","setIsBlocked","validateLogin","email","password","handleSubmit","event","preventDefault","isValid","Error","resetLoginState","err","console","log","localStorage","setItem","Date","now","blockedUserTimestamp","getItem","blockedUserTime","parseInt","removeItem","handleEmailInputChange","e","target","value","handlePasswordInputChange","handleRememberMeChange","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/maida/OneDrive/מסמכים/project/src/pages/login/LoginPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nconst LoginPage = () => {\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(true);\n  const [errorsState, setErrorsState] = useState(null);\n  const [loginAttempts, setLoginAttempts] = useState(0);\n  const [isBlocked, setIsBlocked] = useState(false);\n\n  // Simulated login validation function (replace with your actual validation logic)\n  const validateLogin = (email, password) => {\n    // Replace this with your validation logic\n    if (email === \"user@example.com\" && password === \"password123\") {\n      return true;\n    }\n    return false;\n  };\n\n  const handleSubmit = async (event) => {\n    if (isBlocked) {\n      toast(\"Your account is blocked. Please try again later.\");\n      return;\n    }\n\n    try {\n      event.preventDefault();\n      const isValid = validateLogin(emailValue, passwordValue);\n      if (!isValid) {\n        throw new Error(\"Invalid credentials\");\n      }\n\n      // Successful login\n      resetLoginState();\n      toast(\"You logged in successfully 👌\");\n    } catch (err) {\n      console.log(\"Login error:\", err);\n      setLoginAttempts(loginAttempts + 1);\n\n      if (loginAttempts >= 2) {\n        setIsBlocked(true);\n        // Simulate storing the block timestamp in localStorage or a server-side database\n        localStorage.setItem(\"blockedUser\", Date.now());\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Check if the user is unblocked\n    const blockedUserTimestamp = localStorage.getItem(\"blockedUser\");\n    if (blockedUserTimestamp) {\n      const now = Date.now();\n      const blockedUserTime = parseInt(blockedUserTimestamp);\n\n      if (now - blockedUserTime >= 24 * 60 * 60 * 1000) {\n        // If 24 hours have passed, unblock the user\n        setIsBlocked(false);\n        setLoginAttempts(0);\n        localStorage.removeItem(\"blockedUser\");\n      }\n    }\n  }, [isBlocked]);\n\n  const resetLoginState = () => {\n    setEmailValue(\"\");\n    setPasswordValue(\"\");\n    setRememberMe(true);\n    setErrorsState(null);\n  };\n\n  const handleEmailInputChange = (e) => {\n    setEmailValue(e.target.value);\n  };\n\n  const handlePasswordInputChange = (e) => {\n    setPasswordValue(e.target.value);\n  };\n\n  const handleRememberMeChange = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Email:\n          <input\n            type=\"email\"\n            value={emailValue}\n            onChange={handleEmailInputChange}\n          />\n        </label>\n        <br />\n        <label>Password:\n          <input\n            type=\"password\"\n            value={passwordValue}\n            onChange={handlePasswordInputChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}