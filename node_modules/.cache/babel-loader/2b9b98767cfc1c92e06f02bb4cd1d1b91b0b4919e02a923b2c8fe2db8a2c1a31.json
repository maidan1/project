{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maida\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\project\\\\src\\\\pages\\\\home\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Grid, Pagination, Typography } from \"@mui/material\";\nimport CardComponent from \"../../components/CardComponent\";\nimport { useNavigate } from \"react-router-dom\";\nimport ROUTES from \"../../routes/ROUTES\";\nimport axios from \"axios\";\nimport homePageNormalization from \"./homePageNormalization\";\nimport { useSelector } from \"react-redux\";\nimport useQueryParams from \"../../hooks/useQueryParams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialDataFromServer = [];\nconst itemsPerPage = 20;\nconst HomePage = () => {\n  _s();\n  const [dataFromServer, setDataFromServer] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n  const userData = useSelector(bigPie => bigPie.authSlice.userData);\n  const query = useQueryParams();\n  useEffect(() => {\n    axios.get(\"/cards\").then(({\n      data\n    }) => {\n      if (userData) data = homePageNormalization(data, userData._id);\n      console.log(\"data\", data);\n      initialDataFromServer = data;\n      setDataFromServer(data);\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  }, [userData]);\n  useEffect(() => {\n    if (!initialDataFromServer.length) return;\n    const filter = query.filter ? query.filter : \"\";\n    console.log(\"filter\", filter);\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    setDataFromServer(initialDataFromServer.filter(card => card.title.startsWith(filter)).slice(startIndex, endIndex));\n  }, [query, initialDataFromServer, currentPage]);\n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n  };\n  const handleDeleteCard = _id => {\n    console.log(\"_id to delete (HomePage)\", _id);\n    setDataFromServer(dataFromServerCopy => dataFromServerCopy.filter(card => card._id !== _id));\n  };\n  const handleEditCard = _id => {\n    navigate(`${ROUTES.EDITCARD}/${_id}`);\n  };\n  const handleLikeCardClick = (_id, isLiked) => {\n    setDataFromServer(dataFromServerCopy => dataFromServerCopy.map(card => {\n      if (card._id === _id) {\n        card.like = isLiked;\n        if (isLiked) {\n          const likedCards = JSON.parse(localStorage.getItem(\"likedCards\")) || [];\n          likedCards.push(card);\n          localStorage.setItem(\"likedCards\", JSON.stringify(likedCards));\n        }\n      }\n      return card;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: dataFromServer.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(CardComponent, {\n          _id: card._id,\n          title: card.title,\n          subTitle: card.subtitle,\n          phone: card.phone,\n          address: `${card.address.city}, ${card.address.street} ${card.address.houseNumber}`,\n          img: card.image.url,\n          alt: card.image.alt,\n          like: card.likes,\n          cardNumber: card.cardNumber,\n          onDeleteCard: handleDeleteCard,\n          onEditCard: handleEditCard,\n          handleLikeCardClick: handleLikeCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: Math.ceil(initialDataFromServer.length / itemsPerPage),\n      page: currentPage,\n      onChange: handlePageChange,\n      color: \"primary\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-end\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"KvmcUrLEd9LosS1ER9sXoZIJrMU=\", false, function () {\n  return [useNavigate, useSelector, useQueryParams];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","Container","Grid","Pagination","Typography","CardComponent","useNavigate","ROUTES","axios","homePageNormalization","useSelector","useQueryParams","jsxDEV","_jsxDEV","initialDataFromServer","itemsPerPage","HomePage","_s","dataFromServer","setDataFromServer","currentPage","setCurrentPage","navigate","userData","bigPie","authSlice","query","get","then","data","_id","console","log","catch","err","length","filter","startIndex","endIndex","card","title","startsWith","slice","handlePageChange","event","value","handleDeleteCard","dataFromServerCopy","handleEditCard","EDITCARD","handleLikeCardClick","isLiked","map","like","likedCards","JSON","parse","localStorage","getItem","push","setItem","stringify","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","md","lg","subTitle","subtitle","phone","address","city","street","houseNumber","img","image","url","alt","likes","cardNumber","onDeleteCard","onEditCard","count","Math","ceil","page","onChange","color","style","display","justifyContent","alignItems","marginTop","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/maida/OneDrive/מסמכים/project/src/pages/home/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Grid, Pagination, Typography } from \"@mui/material\";\nimport CardComponent from \"../../components/CardComponent\";\nimport { useNavigate } from \"react-router-dom\";\nimport ROUTES from \"../../routes/ROUTES\";\nimport axios from \"axios\";\nimport homePageNormalization from \"./homePageNormalization\";\nimport { useSelector } from \"react-redux\";\nimport useQueryParams from \"../../hooks/useQueryParams\";\n\nlet initialDataFromServer = [];\nconst itemsPerPage = 20;\n\nconst HomePage = () => {\n  const [dataFromServer, setDataFromServer] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n  const userData = useSelector((bigPie) => bigPie.authSlice.userData);\n  const query = useQueryParams();\n\n  useEffect(() => {\n    axios\n      .get(\"/cards\")\n      .then(({ data }) => {\n        if (userData) data = homePageNormalization(data, userData._id);\n        console.log(\"data\", data);\n        initialDataFromServer = data;\n        setDataFromServer(data);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  }, [userData]);\n\n  useEffect(() => {\n    if (!initialDataFromServer.length) return;\n    const filter = query.filter ? query.filter : \"\";\n    console.log(\"filter\", filter);\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    setDataFromServer(\n      initialDataFromServer\n        .filter((card) => card.title.startsWith(filter))\n        .slice(startIndex, endIndex)\n    );\n  }, [query, initialDataFromServer, currentPage]);\n\n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n  };\n\n  const handleDeleteCard = (_id) => {\n    console.log(\"_id to delete (HomePage)\", _id);\n    setDataFromServer((dataFromServerCopy) =>\n      dataFromServerCopy.filter((card) => card._id !== _id)\n    );\n  };\n\n  const handleEditCard = (_id) => {\n    navigate(`${ROUTES.EDITCARD}/${_id}`);\n  };\n\n  const handleLikeCardClick = (_id, isLiked) => {\n    setDataFromServer((dataFromServerCopy) =>\n      dataFromServerCopy.map((card) => {\n        if (card._id === _id) {\n          card.like = isLiked;\n          if (isLiked) {\n            const likedCards =\n              JSON.parse(localStorage.getItem(\"likedCards\")) || [];\n            likedCards.push(card);\n            localStorage.setItem(\"likedCards\", JSON.stringify(likedCards));\n          }\n        }\n        return card;\n      })\n    );\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h1\"></Typography>\n      <Grid container spacing={2}>\n        {dataFromServer.map((card) => (\n          <Grid item key={card._id} xs={12} sm={6} md={4} lg={3}>\n            <CardComponent\n              _id={card._id}\n              title={card.title}\n              subTitle={card.subtitle}\n              phone={card.phone}\n              address={`${card.address.city}, ${card.address.street} ${card.address.houseNumber}`}\n              img={card.image.url}\n              alt={card.image.alt}\n              like={card.likes}\n              cardNumber={card.cardNumber}\n              onDeleteCard={handleDeleteCard}\n              onEditCard={handleEditCard}\n              handleLikeCardClick={handleLikeCardClick}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <Pagination\n        count={Math.ceil(initialDataFromServer.length / itemsPerPage)}\n        page={currentPage}\n        onChange={handlePageChange}\n        color=\"primary\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"flex-end\",\n          marginTop: \"20px\",\n          marginBottom: \"20px\",\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}