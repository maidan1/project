{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maida\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\project\\\\src\\\\pages\\\\Sandbox\\\\SandboxPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Typography, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SandboxPage = () => {\n  _s();\n  const user = useSelector(state => state.authSlice);\n  const dispatch = useDispatch();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(\"users\");\n        setUsers(data);\n        console.log(data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchAllUsers();\n  }, []);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  const updateUserProfile = (userId, updatedData) => {\n    dispatch({\n      type: \"UPDATE_USER_PROFILE\",\n      userId,\n      updatedData\n    });\n  };\n  const viewCRMSystem = () => {\n    window.location.href = \"/crm\";\n  };\n  const changeUserStatus = (userId, newStatus) => {\n    dispatch({\n      type: \"CHANGE_USER_STATUS\",\n      userId,\n      newStatus\n    });\n  };\n  const blockUser = userId => {\n    dispatch({\n      type: \"BLOCK_USER\",\n      userId\n    });\n  };\n  const deleteUser = async userId => {\n    try {\n      await axios.delete(`users/${userId}`);\n      const updatedUsers = users.filter(user => user._id !== userId);\n      setUsers(updatedUsers);\n    } catch (error) {\n      console.log(\"Error deleting user:\", error);\n    }\n  };\n  const handleStatusChange = (userId, newStatus) => {\n    console.log(`Changed status for user ID ${userId} to ${newStatus}`);\n  };\n  const handleBlockUser = userId => {\n    blockUser(userId);\n    console.log(`Blocked user with ID: ${userId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      children: \"Sandbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), user.isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateUserProfile(user.id, {\n          /* updated user data */\n        }),\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), user.isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: viewCRMSystem,\n        children: \"View CRM System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), user.isAdmin && /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"User Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: users.map(userData => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: userData._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: userData.name.first\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: userData.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => deleteUser(userData._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleStatusChange(userData._id, \"newStatus\"),\n                children: \"Edit Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleBlockUser(userData._id),\n                children: \"Block\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)]\n          }, userData._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(SandboxPage, \"zZRoEhe7b6KUCvz1lUAPCFS3XNk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = SandboxPage;\nexport default SandboxPage;\nvar _c;\n$RefreshReg$(_c, \"SandboxPage\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Typography","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","useSelector","useDispatch","axios","jsxDEV","_jsxDEV","SandboxPage","_s","user","state","authSlice","dispatch","users","setUsers","fetchAllUsers","data","get","console","log","e","children","fileName","_jsxFileName","lineNumber","columnNumber","updateUserProfile","userId","updatedData","type","viewCRMSystem","window","location","href","changeUserStatus","newStatus","blockUser","deleteUser","delete","updatedUsers","filter","_id","error","handleStatusChange","handleBlockUser","variant","isAuthenticated","onClick","id","isAdmin","map","userData","name","first","phone","_c","$RefreshReg$"],"sources":["C:/Users/maida/OneDrive/מסמכים/project/src/pages/Sandbox/SandboxPage.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Typography,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\n\nconst SandboxPage = () => {\n  const user = useSelector((state) => state.authSlice);\n  const dispatch = useDispatch();\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const { data } = await axios.get(\"users\");\n        setUsers(data);\n        console.log(data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchAllUsers();\n  }, []);\n\n  if (!user) {\n    return <p>Loading...</p>;\n  }\n\n  const updateUserProfile = (userId, updatedData) => {\n    dispatch({ type: \"UPDATE_USER_PROFILE\", userId, updatedData });\n  };\n\n  const viewCRMSystem = () => {\n    window.location.href = \"/crm\";\n  };\n\n  const changeUserStatus = (userId, newStatus) => {\n    dispatch({ type: \"CHANGE_USER_STATUS\", userId, newStatus });\n  };\n\n  const blockUser = (userId) => {\n    dispatch({ type: \"BLOCK_USER\", userId });\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      await axios.delete(`users/${userId}`);\n      const updatedUsers = users.filter((user) => user._id !== userId);\n      setUsers(updatedUsers);\n    } catch (error) {\n      console.log(\"Error deleting user:\", error);\n    }\n  };\n\n  const handleStatusChange = (userId, newStatus) => {\n    console.log(`Changed status for user ID ${userId} to ${newStatus}`);\n  };\n\n  const handleBlockUser = (userId) => {\n    blockUser(userId); \n    console.log(`Blocked user with ID: ${userId}`);\n  };\n\n  return (\n    <Fragment>\n      <Typography variant=\"h1\">Sandbox</Typography>\n\n      {user.isAuthenticated && (\n        <div>\n          <Button\n            onClick={() =>\n              updateUserProfile(user.id, {\n                /* updated user data */\n              })\n            }\n          >\n            Update Profile\n          </Button>\n        </div>\n      )}\n\n      {user.isAdmin && (\n        <div>\n          <Button onClick={viewCRMSystem}>View CRM System</Button>\n        </div>\n      )}\n\n      {user.isAdmin && (\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>User ID</TableCell>\n                <TableCell>User Name</TableCell>\n                <TableCell>User Phone</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users.map((userData) => (\n                <TableRow key={userData._id}>\n                  <TableCell>{userData._id}</TableCell>\n                  <TableCell>{userData.name.first}</TableCell>\n                  <TableCell>{userData.phone}</TableCell>\n                  <TableCell>\n                    <Button onClick={() => deleteUser(userData._id)}>\n                      Delete\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        handleStatusChange(userData._id, \"newStatus\")\n                      }\n                    >\n                      Edit Status\n                    </Button>\n                    <Button onClick={() => handleBlockUser(userData._id)}>\n                      Block\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SandboxPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}