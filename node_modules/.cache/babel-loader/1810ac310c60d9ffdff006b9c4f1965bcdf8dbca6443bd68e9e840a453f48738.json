{"ast":null,"code":"var e = function e(_e, r, a) {\n    void 0 === _e && (_e = 0), void 0 === r && (r = 0), void 0 === a && (a = 0), a /= 100;\n    var t = function t(r) {\n        return (r + _e / 30) % 12;\n      },\n      f = (r /= 100) * Math.min(a, 1 - a),\n      n = function n(e) {\n        return Math.round(255 * function (e) {\n          return a - f * Math.max(-1, Math.min(t(e) - 3, Math.min(9 - t(e), 1)));\n        }(e));\n      };\n    return [n(0), n(8), n(4)];\n  },\n  r = function r(e, _r, a) {\n    var t = function t(e) {\n      var r = e.toString(16);\n      return 2 != r.length ? \"0\" + r : r;\n    };\n    return \"#\" + t(e) + t(_r) + t(a);\n  },\n  a = function a(_a) {\n    var t,\n      f = 4 === (t = _a).length ? function (e) {\n        var r = e.slice(1, 2),\n          a = e.slice(2, 3),\n          t = e.slice(3, 4);\n        return [r = parseInt(r + r, 16), a = parseInt(a + a, 16), t = parseInt(t + t, 16)];\n      }(t) : [parseInt(t.slice(1, 3), 16), parseInt(t.slice(3, 5), 16), parseInt(t.slice(5, 7), 16)],\n      n = function (e, r, a) {\n        void 0 === e && (e = 0), void 0 === r && (r = 0), void 0 === a && (a = 0), e /= 255, r /= 255, a /= 255;\n        var t = Math.max(e, r, a),\n          f = t - Math.min(e, r, a),\n          n = f ? t === e ? (r - a) / f : t === r ? 2 + (a - e) / f : 4 + (e - r) / f : 0;\n        return [60 * n < 0 ? 60 * n + 360 : 60 * n, 100 * (f ? t <= .5 ? f / (2 * t - f) : f / (2 - (2 * t - f)) : 0), 100 * (2 * t - f) / 2];\n      }(f[0], f[1], f[2]),\n      l = n[2],\n      i = 100 - l;\n    i >= 35 && i <= 44 && (i -= 15), i >= 45 && i <= 55 && (i -= 35), i >= 56 && i <= 65 && (i += 10), i < 0 && (i = 0), i > 100 && (i = 100);\n    var d = e(n[0], n[1], i),\n      o = _a,\n      c = r(d[0], d[1], d[2]);\n    return l > i ? {\n      light: o,\n      dark: c\n    } : {\n      light: c,\n      dark: o\n    };\n  },\n  t = {\n    black: \"#000000\",\n    silver: \"#c0c0c0\",\n    gray: \"#808080\",\n    white: \"#ffffff\",\n    maroon: \"#800000\",\n    red: \"#ff0000\",\n    purple: \"#800080\",\n    fuchsia: \"#ff00ff\",\n    green: \"#008000\",\n    lime: \"#00ff00\",\n    olive: \"#808000\",\n    yellow: \"#ffff00\",\n    navy: \"#000080\",\n    blue: \"#0000ff\",\n    teal: \"#008080\",\n    aqua: \"#00ffff\",\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    blanchedalmond: \"#ffebcd\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkgrey: \"#a9a9a9\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    gold: \"#ffd700\",\n    goldenrod: \"#daa520\",\n    greenyellow: \"#adff2f\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    indianred: \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavender: \"#e6e6fa\",\n    lavenderblush: \"#fff0f5\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgray: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightgrey: \"#d3d3d3\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370db\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    oldlace: \"#fdf5e6\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#db7093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    whitesmoke: \"#f5f5f5\",\n    yellowgreen: \"#9acd32\"\n  },\n  f = /!/,\n  n = /\\*/,\n  l = function l() {\n    var a = [].slice.call(arguments);\n    if (!a) return null;\n    var l = !1,\n      i = !1,\n      d = \"\",\n      o = \"rgb\",\n      c = 0;\n    switch (a.length) {\n      case 1:\n        if (a = a[0].trim(), l = f.test(a), i = n.test(a), \"string\" != typeof (a = a.replace(\"*\", \"\").replace(\"!\", \"\"))) return null;\n        var u = function (e) {\n          if (e) return e = e.trim().toLocaleLowerCase(), t[e];\n        }(a);\n        if (u) {\n          d = u;\n          break;\n        }\n        if (a = a.startsWith(\"#\") ? a : \"#\" + a, !/^#[0-9a-z]{6}$/gi.test(a) && !/^#[0-9a-z]{3}$/gi.test(a)) return null;\n        d = a;\n        break;\n      case 4:\n        l = a[0].includes(\"!\"), i = a[0].includes(\"*\"), a[0].includes(\"h\") && (o = \"h\"), a[0].includes(\"r\") && (o = \"r\"), c = 1;\n      case 3:\n        \"h\" === o && (a = e(a[c], a[c + 1], a[c + 2]), c = 0), d = r(a[c], a[c + 1], a[c + 2]);\n        break;\n      default:\n        return null;\n    }\n    return {\n      hex: d,\n      swipeTheme: l,\n      sameColor: i\n    };\n  },\n  i = function i() {\n    var e = [].slice.call(arguments);\n    Array.isArray(e[0]) && (e = [].concat(e[0]));\n    var r,\n      t = l.apply(void 0, e);\n    if (!t) return null;\n    if (r = t.sameColor ? {\n      light: t.hex,\n      dark: t.hex\n    } : a(t.hex), t.swipeTheme) {\n      var f = r.light;\n      r.light = r.dark, r.dark = f;\n    }\n    return r;\n  },\n  d = function d(e, r, a, t) {\n    if (\"object\" != typeof t) return null;\n    for (var f = {}, n = 0, l = Object.entries(t); n < l.length; n++) {\n      var d,\n        o,\n        c = l[n],\n        u = c[0],\n        s = c[1];\n      if (\"string\" != typeof s && !Array.isArray(s)) return null;\n      f = i(s), e.palette[a] ? e.palette[a][u] = f.light : e.palette[a] = ((d = {})[u] = f.light, d), r.palette[a] ? r.palette[a][u] = f.dark : r.palette[a] = ((o = {})[u] = f.dark, o);\n    }\n    return !0;\n  };\nfunction o(e, r) {\n  (null == r || r > e.length) && (r = e.length);\n  for (var a = 0, t = new Array(r); a < r; a++) t[a] = e[a];\n  return t;\n}\nvar c = function c(e, r, a, t) {\n    var f = a.split(\".\");\n    if (f.length <= 1) return null;\n    for (var n, l, d, c = i(t), u = e.palette, s = r.palette, b = function (e, r) {\n        var a = \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n        if (a) return (a = a.call(e)).next.bind(a);\n        if (Array.isArray(e) || (a = function (e, r) {\n          if (e) {\n            if (\"string\" == typeof e) return o(e, r);\n            var a = Object.prototype.toString.call(e).slice(8, -1);\n            return \"Object\" === a && e.constructor && (a = e.constructor.name), \"Map\" === a || \"Set\" === a ? Array.from(e) : \"Arguments\" === a || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a) ? o(e, r) : void 0;\n          }\n        }(e))) {\n          a && (e = a);\n          var t = 0;\n          return function () {\n            return t >= e.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: e[t++]\n            };\n          };\n        }\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }(f); !(d = b()).done;) {\n      var g = d.value;\n      u[g] = u[g] ? u[g] : {}, n = u, u = u[g], s[g] = s[g] ? s[g] : {}, l = s, s = s[g];\n    }\n    var h = f[f.length - 1];\n    return n[h] = c.light, l[h] = c.dark, !0;\n  },\n  u = function u(e, r, a, t) {\n    var f = i(t);\n    return e.palette[a] = {\n      main: f.light\n    }, r.palette[a] = {\n      main: f.dark\n    }, !0;\n  },\n  s = function s(e) {\n    void 0 === e && (e = {});\n    for (var r = {\n        palette: {\n          mode: \"light\"\n        }\n      }, a = {\n        palette: {\n          mode: \"dark\"\n        }\n      }, t = 0, f = Object.entries(e); t < f.length; t++) {\n      var n = f[t],\n        l = n[0],\n        i = n[1];\n      \"string\" == typeof i || Array.isArray(i) ? l.includes(\".\") ? c(r, a, l, i) : u(r, a, l, i) : d(r, a, l, i);\n    }\n    return {\n      light: r,\n      dark: a\n    };\n  };\nexport { a as createDarkLightColors, s as default, t as knownColors };","map":{"version":3,"names":["e","r","a","t","f","Math","min","n","round","max","toString","length","slice","parseInt","l","i","d","o","c","light","dark","black","silver","gray","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","aliceblue","antiquewhite","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","gainsboro","ghostwhite","gold","goldenrod","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","limegreen","linen","magenta","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","oldlace","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","call","arguments","trim","test","replace","u","toLocaleLowerCase","startsWith","includes","hex","swipeTheme","sameColor","Array","isArray","concat","apply","Object","entries","s","palette","split","b","Symbol","iterator","next","bind","prototype","constructor","name","from","done","value","TypeError","g","h","main","mode","createDarkLightColors","default","knownColors"],"sources":["C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\converters\\RGBToHSL.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\converters\\HSLToRGB.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\converters\\RGBToHex.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\createColors\\createDarkLightColors.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\converters\\hexToRGB.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\converters\\fullHex.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\converters\\knowColorsToHex.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\createColors\\syntaxCheckAndConvert.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\createColors\\runColors.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\mui\\muiAddObjObj.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\mui\\muiAddObjString.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\mui\\muiAddString.js","C:\\Users\\maida\\OneDrive\\מסמכים\\project\\node_modules\\twin-moon-color\\src\\mui\\muiTemplate.js"],"sourcesContent":["/* from: \r\n    RGBToHSL - https://www.30secondsofcode.org/js/s/rgb-to-hsl/\r\n*/\r\n\r\n/**\r\n    @param {number} r red color (0-255)\r\n    @param {number} g green color (0-255)\r\n    @param {number} b blue color (0-255)\r\n    @returns {[hue, saturation, lightness]} array of HSL\r\n    @description convert rgb to hsl\r\n*/\r\nconst RGBToHSL = (r = 0, g = 0, b = 0) => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n  const l = Math.max(r, g, b);\r\n  const s = l - Math.min(r, g, b);\r\n  const h = s\r\n    ? l === r\r\n      ? (g - b) / s\r\n      : l === g\r\n      ? 2 + (b - r) / s\r\n      : 4 + (r - g) / s\r\n    : 0;\r\n  return [\r\n    60 * h < 0 ? 60 * h + 360 : 60 * h,\r\n    100 * (s ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0),\r\n    (100 * (2 * l - s)) / 2,\r\n  ];\r\n};\r\nexport default RGBToHSL;\r\n","/* from: \r\n    HSLToRGB - https://www.30secondsofcode.org/js/s/hsl-to-rgb/\r\n*/\r\n/**\r\n    @param {number} h hue color (0-360)\r\n    @param {number} s saturation color (0-100)\r\n    @param {number} l lightness color (0-100)\r\n    @returns {[red, green, blue]} array of RGB\r\n    @description convert hsl to rgb\r\n*/\r\nconst HSLToRGB = (h = 0, s = 0, l = 0) => {\r\n  s /= 100;\r\n  l /= 100;\r\n  const k = (n) => (n + h / 30) % 12;\r\n  const a = s * Math.min(l, 1 - l);\r\n  const f = (n) =>\r\n    l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\r\n  const f2 = (n) => Math.round(255 * f(n));\r\n  return [f2(0), f2(8), f2(4)];\r\n};\r\n\r\nexport default HSLToRGB;\r\n","/**\r\n    @param {number} r red color (0-255)\r\n    @param {number} g green color (0-255)\r\n    @param {number} b blue color (0-255)\r\n    @returns {string} color in hex\r\n    @description convert rgb to rgb in hex format\r\n*/\r\nconst RGBToHex = (r, g, b) => {\r\n  const f = (n) => {\r\n    let nn = n.toString(16);\r\n    if (nn.length != 2) return \"0\" + nn;\r\n    return nn;\r\n  };\r\n  return `#${f(r)}${f(g)}${f(b)}`;\r\n};\r\nexport default RGBToHex;\r\n","import RGBToHSL from \"../converters/RGBToHSL.js\";\r\nimport hexToRGB from \"../converters/hexToRGB.js\";\r\nimport HSLToRGB from \"../converters/HSLToRGB.js\";\r\nimport RGBToHex from \"../converters/RGBToHex.js\";\r\n\r\n/**\r\n * @typedef {object} generatedColors\r\n * @property {string} dark - dark color\r\n * @property {string} light - light color\r\n */\r\n\r\n/**\r\n *\r\n * @param {string} hexColor rgb color in hex\r\n * @returns {generatedColors} object with light color and dark color\r\n * @description create object with light color and dark color.\r\n * it will use the color to decide with color to create\r\n * for example if you provide light color it will calc dark color\r\n * and will detect light/dark automatically\r\n */\r\nconst createDarkLightColors = (hexColor) => {\r\n  const [r, g, b] = hexToRGB(hexColor);\r\n  const [h, s, l] = RGBToHSL(r, g, b);\r\n  let nL = 100 - l;\r\n  if (nL >= 35 && nL <= 44) nL -= 15;\r\n  if (nL >= 45 && nL <= 55) nL -= 35;\r\n  if (nL >= 56 && nL <= 65) nL += 10;\r\n  if (nL < 0) nL = 0;\r\n  if (nL > 100) nL = 100;\r\n  const [nr, ng, nb] = HSLToRGB(h, s, nL);\r\n  let color1 = hexColor,\r\n    color2 = RGBToHex(nr, ng, nb);\r\n  if (l > nL) return { light: color1, dark: color2 };\r\n  return { light: color2, dark: color1 };\r\n};\r\n\r\nexport default createDarkLightColors;\r\n","/* from: \r\n    hexToRGB - https://learnersbucket.com/examples/interview/convert-hex-color-to-rgb-in-javascript/\r\n*/\r\nimport fullHex from \"./fullHex.js\";\r\n/**\r\n *\r\n * @param {string} hex rgb color in hex\r\n * @returns {[red, green, blue]} array of RGB\r\n * @description convert rgb in hex format to rgb array\r\n */\r\nconst hexToRGB = (hex) => {\r\n  if (hex.length === 4) {\r\n    return fullHex(hex);\r\n  }\r\n\r\n  const r = parseInt(hex.slice(1, 3), 16);\r\n  const g = parseInt(hex.slice(3, 5), 16);\r\n  const b = parseInt(hex.slice(5, 7), 16);\r\n\r\n  return [r, g, b];\r\n};\r\nexport default hexToRGB;\r\n","/**\r\n *\r\n * @param {string} hex rgb color in hex\r\n * @returns {[red, green, blue]} array of RGB\r\n * @description convert rgb in hex format to rgb array\r\n */\r\nconst fullHex = (hex) => {\r\n  let r = hex.slice(1, 2);\r\n  let g = hex.slice(2, 3);\r\n  let b = hex.slice(3, 4);\r\n\r\n  r = parseInt(r + r, 16);\r\n  g = parseInt(g + g, 16);\r\n  b = parseInt(b + b, 16);\r\n\r\n  return [r, g, b];\r\n};\r\nexport default fullHex;\r\n","/*\r\n    color source from:\r\n        https://www.w3.org/wiki/CSS/Properties/color/keywords\r\n*/\r\n\r\nconst knownColors = {\r\n  black: \"#000000\",\r\n  silver: \"#c0c0c0\",\r\n  gray: \"#808080\",\r\n  white: \"#ffffff\",\r\n  maroon: \"#800000\",\r\n  red: \"#ff0000\",\r\n  purple: \"#800080\",\r\n  fuchsia: \"#ff00ff\",\r\n  green: \"#008000\",\r\n  lime: \"#00ff00\",\r\n  olive: \"#808000\",\r\n  yellow: \"#ffff00\",\r\n  navy: \"#000080\",\r\n  blue: \"#0000ff\",\r\n  teal: \"#008080\",\r\n  aqua: \"#00ffff\",\r\n  aliceblue: \"#f0f8ff\",\r\n  antiquewhite: \"#faebd7\",\r\n  aquamarine: \"#7fffd4\",\r\n  azure: \"#f0ffff\",\r\n  beige: \"#f5f5dc\",\r\n  bisque: \"#ffe4c4\",\r\n  blanchedalmond: \"#ffebcd\",\r\n  blueviolet: \"#8a2be2\",\r\n  brown: \"#a52a2a\",\r\n  burlywood: \"#deb887\",\r\n  cadetblue: \"#5f9ea0\",\r\n  chartreuse: \"#7fff00\",\r\n  chocolate: \"#d2691e\",\r\n  coral: \"#ff7f50\",\r\n  cornflowerblue: \"#6495ed\",\r\n  cornsilk: \"#fff8dc\",\r\n  crimson: \"#dc143c\",\r\n  cyan: \"#00ffff\",\r\n  darkblue: \"#00008b\",\r\n  darkcyan: \"#008b8b\",\r\n  darkgoldenrod: \"#b8860b\",\r\n  darkgray: \"#a9a9a9\",\r\n  darkgreen: \"#006400\",\r\n  darkgrey: \"#a9a9a9\",\r\n  darkkhaki: \"#bdb76b\",\r\n  darkmagenta: \"#8b008b\",\r\n  darkolivegreen: \"#556b2f\",\r\n  darkorange: \"#ff8c00\",\r\n  darkorchid: \"#9932cc\",\r\n  darkred: \"#8b0000\",\r\n  darksalmon: \"#e9967a\",\r\n  darkseagreen: \"#8fbc8f\",\r\n  darkslateblue: \"#483d8b\",\r\n  darkslategray: \"#2f4f4f\",\r\n  darkturquoise: \"#00ced1\",\r\n  darkviolet: \"#9400d3\",\r\n  deeppink: \"#ff1493\",\r\n  deepskyblue: \"#00bfff\",\r\n  dimgray: \"#696969\",\r\n  dodgerblue: \"#1e90ff\",\r\n  firebrick: \"#b22222\",\r\n  floralwhite: \"#fffaf0\",\r\n  forestgreen: \"#228b22\",\r\n  gainsboro: \"#dcdcdc\",\r\n  ghostwhite: \"#f8f8ff\",\r\n  gold: \"#ffd700\",\r\n  goldenrod: \"#daa520\",\r\n  greenyellow: \"#adff2f\",\r\n  honeydew: \"#f0fff0\",\r\n  hotpink: \"#ff69b4\",\r\n  indianred: \"#cd5c5c\",\r\n  indigo: \"#4b0082\",\r\n  ivory: \"#fffff0\",\r\n  khaki: \"#f0e68c\",\r\n  lavender: \"#e6e6fa\",\r\n  lavenderblush: \"#fff0f5\",\r\n  lawngreen: \"#7cfc00\",\r\n  lemonchiffon: \"#fffacd\",\r\n  lightblue: \"#add8e6\",\r\n  lightcoral: \"#f08080\",\r\n  lightcyan: \"#e0ffff\",\r\n  lightgoldenrodyellow: \"#fafad2\",\r\n  lightgray: \"#d3d3d3\",\r\n  lightgreen: \"#90ee90\",\r\n  lightgrey: \"#d3d3d3\",\r\n  lightpink: \"#ffb6c1\",\r\n  lightsalmon: \"#ffa07a\",\r\n  lightseagreen: \"#20b2aa\",\r\n  lightskyblue: \"#87cefa\",\r\n  lightslategray: \"#778899\",\r\n  lightslategrey: \"#778899\",\r\n  lightsteelblue: \"#b0c4de\",\r\n  lightyellow: \"#ffffe0\",\r\n  limegreen: \"#32cd32\",\r\n  linen: \"#faf0e6\",\r\n  magenta: \"#ff00ff\",\r\n  mediumaquamarine: \"#66cdaa\",\r\n  mediumblue: \"#0000cd\",\r\n  mediumorchid: \"#ba55d3\",\r\n  mediumpurple: \"#9370db\",\r\n  mediumseagreen: \"#3cb371\",\r\n  mediumslateblue: \"#7b68ee\",\r\n  mediumspringgreen: \"#00fa9a\",\r\n  mediumturquoise: \"#48d1cc\",\r\n  mediumvioletred: \"#c71585\",\r\n  midnightblue: \"#191970\",\r\n  mintcream: \"#f5fffa\",\r\n  mistyrose: \"#ffe4e1\",\r\n  moccasin: \"#ffe4b5\",\r\n  navajowhite: \"#ffdead\",\r\n  oldlace: \"#fdf5e6\",\r\n  olivedrab: \"#6b8e23\",\r\n  orange: \"#ffa500\",\r\n  orangered: \"#ff4500\",\r\n  orchid: \"#da70d6\",\r\n  palegoldenrod: \"#eee8aa\",\r\n  palegreen: \"#98fb98\",\r\n  paleturquoise: \"#afeeee\",\r\n  palevioletred: \"#db7093\",\r\n  papayawhip: \"#ffefd5\",\r\n  peachpuff: \"#ffdab9\",\r\n  peru: \"#cd853f\",\r\n  pink: \"#ffc0cb\",\r\n  plum: \"#dda0dd\",\r\n  powderblue: \"#b0e0e6\",\r\n  rosybrown: \"#bc8f8f\",\r\n  royalblue: \"#4169e1\",\r\n  saddlebrown: \"#8b4513\",\r\n  salmon: \"#fa8072\",\r\n  sandybrown: \"#f4a460\",\r\n  seagreen: \"#2e8b57\",\r\n  seashell: \"#fff5ee\",\r\n  sienna: \"#a0522d\",\r\n  skyblue: \"#87ceeb\",\r\n  slateblue: \"#6a5acd\",\r\n  slategray: \"#708090\",\r\n  snow: \"#fffafa\",\r\n  springgreen: \"#00ff7f\",\r\n  steelblue: \"#4682b4\",\r\n  tan: \"#d2b48c\",\r\n  thistle: \"#d8bfd8\",\r\n  tomato: \"#ff6347\",\r\n  turquoise: \"#40e0d0\",\r\n  violet: \"#ee82ee\",\r\n  wheat: \"#f5deb3\",\r\n  whitesmoke: \"#f5f5f5\",\r\n  yellowgreen: \"#9acd32\",\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} colorName - known color\r\n * @returns {string} hex color\r\n * @description convert known color to hex\r\n */\r\nconst knowColorsToHex = (colorName) => {\r\n  if (!colorName) return undefined;\r\n  colorName = colorName.trim().toLocaleLowerCase();\r\n  return knownColors[colorName];\r\n};\r\n\r\n// const cleanColors = () => {\r\n//   for (const [k, v] of Object.entries(knownColors)) {\r\n//     knownColors[k] = v.trim().toLocaleLowerCase();\r\n//   }\r\n//   console.log(knownColors);\r\n// };\r\nexport default knowColorsToHex;\r\nexport { knownColors };\r\n","import knowColorsToHex from \"../converters/knowColorsToHex.js\";\r\nimport RGBToHex from \"../converters/RGBToHex.js\";\r\nimport HSLToRGB from \"../converters/HSLToRGB.js\";\r\n\r\nconst swipeRegex = /!/;\r\nconst sameColorRegex = /\\*/;\r\n\r\n/**\r\n *\r\n * @param {string[]} color - in hex, rgb, hsl, know color format\r\n * @returns {string} hex color\r\n * @description this function will get color in hex, rgb, hsl, know color format and convert it to hex\r\n */\r\nconst syntaxCheckAndConvertToHex = (...color) => {\r\n  if (!color) return null;\r\n  let swipeTheme = false,\r\n    sameColor = false;\r\n  let retColor = \"\";\r\n  let format = \"rgb\";\r\n  let startIndex = 0;\r\n  switch (color.length) {\r\n    case 1:\r\n      //hex or knownColor\r\n      color = color[0].trim();\r\n      swipeTheme = swipeRegex.test(color);\r\n      sameColor = sameColorRegex.test(color);\r\n      color = color.replace(\"*\", \"\").replace(\"!\", \"\");\r\n      if (typeof color !== \"string\") return null;\r\n      let kolor = knowColorsToHex(color);\r\n      if (kolor) {\r\n        retColor = kolor;\r\n        break;\r\n      }\r\n      const hexFormatFull = /^#[0-9a-z]{6}$/gi;\r\n      const hexFormatHalf = /^#[0-9a-z]{3}$/gi;\r\n      color = color.startsWith(\"#\") ? color : \"#\" + color;\r\n      if (hexFormatFull.test(color) || hexFormatHalf.test(color))\r\n        retColor = color;\r\n      else return null;\r\n      break;\r\n    case 4:\r\n      // swipeTheme = color[0].startsWith(\"!\");\r\n      swipeTheme = color[0].includes(\"!\");\r\n      sameColor = color[0].includes(\"*\");\r\n      if (color[0].includes(\"h\")) format = \"h\";\r\n      if (color[0].includes(\"r\")) format = \"r\";\r\n      startIndex = 1;\r\n    case 3:\r\n      //rgb or hsl\r\n      if (format === \"h\") {\r\n        color = HSLToRGB(\r\n          color[startIndex],\r\n          color[startIndex + 1],\r\n          color[startIndex + 2]\r\n        );\r\n        startIndex = 0;\r\n      }\r\n      retColor = RGBToHex(\r\n        color[startIndex],\r\n        color[startIndex + 1],\r\n        color[startIndex + 2]\r\n      );\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n  return { hex: retColor, swipeTheme, sameColor };\r\n};\r\n\r\nexport default syntaxCheckAndConvertToHex;\r\n","import createDarkLightColors from \"./createDarkLightColors.js\";\r\nimport syntaxCheckAndConvertToHex from \"./syntaxCheckAndConvert.js\";\r\n\r\n/**\r\n * @typedef {object} generatedColors\r\n * @property {string} dark - dark color\r\n * @property {string} light - light color\r\n */\r\n\r\n/**\r\n *\r\n * @param {string[]} hexColorOrName rgb color in hex or known color name or r,g,b\r\n * @returns {generatedColors} object with light color and dark color\r\n * @description create object with light color and dark color.\r\n * it will use the color to decide with color to create\r\n * for example if you provide light color it will calc dark color\r\n * and will detect light/dark automatically\r\n */\r\nconst runColors = (...hexColorOrName) => {\r\n  if (Array.isArray(hexColorOrName[0])) hexColorOrName = [...hexColorOrName[0]];\r\n  let res = syntaxCheckAndConvertToHex(...hexColorOrName);\r\n  if (!res) return null;\r\n  let colors;\r\n  if (res.sameColor) {\r\n    colors = {\r\n      light: res.hex,\r\n      dark: res.hex,\r\n    };\r\n  } else {\r\n    colors = createDarkLightColors(res.hex);\r\n  }\r\n  if (res.swipeTheme) {\r\n    let tmp = colors.light;\r\n    colors.light = colors.dark;\r\n    colors.dark = tmp;\r\n  }\r\n  return colors;\r\n};\r\n\r\nexport default runColors;\r\n","import runColors from \"../createColors/runColors.js\";\r\n\r\n/**\r\n *\r\n * @param {lightTheme} lightTheme - lightTheme object\r\n * @param {darkTheme} darkTheme - darkTheme object\r\n * @param {string} paletteColorName - name of the palette color\r\n * @param {object} colorValue - value of the color should be object inside object\r\n * @returns {{light:Theme, dark:Theme}} object with light theme and dark theme\r\n * @description create object with light theme and dark theme for mui createTheme\r\n * it will setup the mode and colors automatically.\r\n * provide object with palette name and color.\r\n * in color you can provide object like text\r\n */\r\nconst muiAddObjObj = (lightTheme, darkTheme, paletteColorName, colorValue) => {\r\n  if (typeof colorValue !== \"object\") return null;\r\n  let colors = {};\r\n  for (let [k, v] of Object.entries(colorValue)) {\r\n    if (typeof v !== \"string\" && !Array.isArray(v)) return null;\r\n    colors = runColors(v);\r\n    lightTheme.palette[paletteColorName]\r\n      ? (lightTheme.palette[paletteColorName][k] = colors.light)\r\n      : (lightTheme.palette[paletteColorName] = { [k]: colors.light });\r\n    darkTheme.palette[paletteColorName]\r\n      ? (darkTheme.palette[paletteColorName][k] = colors.dark)\r\n      : (darkTheme.palette[paletteColorName] = { [k]: colors.dark });\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default muiAddObjObj;\r\n","import runColors from \"../createColors/runColors.js\";\r\n/**\r\n *\r\n * @param {lightTheme} lightTheme - lightTheme object\r\n * @param {darkTheme} darkTheme - darkTheme object\r\n * @param {string} paletteColorName - name of the palette color\r\n * @param {string} colorValue - value of the color\r\n * @returns {{light:Theme, dark:Theme}} object with light theme and dark theme\r\n * @description create object with light theme and dark theme for mui createTheme\r\n * it will setup the mode and colors automatically.\r\n * provide object with palette name and color.\r\n * use \".\" to separate the object and it will create object inside object\r\n */\r\nconst muiAddObjString = (\r\n  lightTheme,\r\n  darkTheme,\r\n  paletteColorName,\r\n  colorValue\r\n) => {\r\n  let pathArr = paletteColorName.split(\".\");\r\n  if (pathArr.length <= 1) return null;\r\n  const colors = runColors(colorValue);\r\n  let lr = lightTheme.palette,\r\n    lpr,\r\n    dr = darkTheme.palette,\r\n    dpr;\r\n  for (let nm of pathArr) {\r\n    lr[nm] = lr[nm] ? lr[nm] : {};\r\n    lpr = lr;\r\n    lr = lr[nm];\r\n    dr[nm] = dr[nm] ? dr[nm] : {};\r\n    dpr = dr;\r\n    dr = dr[nm];\r\n  }\r\n  let k = pathArr[pathArr.length - 1];\r\n  lpr[k] = colors.light;\r\n  dpr[k] = colors.dark;\r\n  return true;\r\n};\r\n\r\nexport default muiAddObjString;\r\n","import runColors from \"../createColors/runColors.js\";\r\n/**\r\n *\r\n * @param {lightTheme} lightTheme - lightTheme object\r\n * @param {darkTheme} darkTheme - darkTheme object\r\n * @param {string} paletteColorName - name of the palette color\r\n * @param {string} colorValue - value of the color\r\n * @returns {{light:Theme, dark:Theme}} object with light theme and dark theme\r\n * @description create object with light theme and dark theme for mui createTheme\r\n * it will setup the mode and colors automatically.\r\n * provide object with palette name and color.\r\n */\r\nconst muiAddString = (lightTheme, darkTheme, paletteColorName, colorValue) => {\r\n  let colors = runColors(colorValue);\r\n  lightTheme.palette[paletteColorName] = { main: colors.light };\r\n  darkTheme.palette[paletteColorName] = { main: colors.dark };\r\n  return true;\r\n};\r\n\r\nexport default muiAddString;\r\n","import muiAddObjObj from \"./muiAddObjObj.js\";\r\nimport muiAddObjString from \"./muiAddObjString.js\";\r\nimport muiAddString from \"./muiAddString.js\";\r\n\r\n/**\r\n *\r\n * @param {{name:color, name2:color2, ...}} [object] paletteColorsObject name of the palette and color\r\n * @returns {generatedColors} object with light theme and dark theme\r\n * @example\r\n * const templates = tmc({primary:\"#000000\", cusColor:\"#0000FF\"})\r\n * <ThemeProvider theme={isDarkTheme ? createTheme(templates.dark) : createTheme(templates.light)}>\r\n * @description create object with light theme and dark theme for mui createTheme\r\n * it will setup the mode and colors automatically.\r\n * provide object with palette name and color.\r\n * add \"!\" to color to put the darker color in light theme and vise versa\r\n */\r\nconst muiTemplate = (paletteColorsObject = {}) => {\r\n  let lightTheme = {\r\n      palette: {\r\n        mode: \"light\",\r\n      },\r\n    },\r\n    darkTheme = {\r\n      palette: {\r\n        mode: \"dark\",\r\n      },\r\n    };\r\n  for (const [colorName, colorValue] of Object.entries(paletteColorsObject)) {\r\n    if (typeof colorValue === \"string\" || Array.isArray(colorValue)) {\r\n      if (colorName.includes(\".\")) {\r\n        muiAddObjString(lightTheme, darkTheme, colorName, colorValue);\r\n      } else {\r\n        muiAddString(lightTheme, darkTheme, colorName, colorValue);\r\n      }\r\n    } else {\r\n      muiAddObjObj(lightTheme, darkTheme, colorName, colorValue);\r\n    }\r\n  }\r\n  return {\r\n    light: lightTheme,\r\n    dark: darkTheme,\r\n  };\r\n};\r\n\r\nexport default muiTemplate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}